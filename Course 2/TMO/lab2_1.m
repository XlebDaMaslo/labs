% параметры для белый гауссовского шума
N = 700;  % количество реализаций случайного процесса
K = 400;  % длина каждой реализации
mu = 14;   % мат ожидание случайного процесса
sigma = 8;  % стандартное отклонение случайного процесса

xi = randn(N, K) * sigma + mu; % генерация матрицы случайных чисел с нормальным распределением

mean_ensemble = mean(xi, 2); % среднее по ансамблю
mean_time = mean(xi, 1); % среднее по времени

% графики средних по ансамблю и по времени
figure;
plot(mean_ensemble, 'b', 'LineWidth', 1.5); hold on;
plot(mean_time, 'r', 'LineWidth', 1.5);
title('Среднее по ансамблю и по времени');
xlabel('N');
ylabel('Среднее значение');
legend('Среднее по ансамблю', 'Среднее по времени');
grid on;

% вывод корреляции между соседними реализациями
figure;
subplot(1, 3, 1);
scatter(xi(10, :), xi(5, :));
title('Диаграмма рассеяния: n=10, n=5');

subplot(1, 3, 2);
scatter(xi(50, :), xi(25, :));
title('Диаграмма рассеяния: n=50, n=25');

subplot(1, 3, 3);
scatter(xi(100, :), xi(50, :));
title('Диаграмма рассеяния: n=100, n=50');

corr_10_9 = corr(xi(10, :)', xi(5, :)');
corr_50_49 = corr(xi(50, :)', xi(25, :)');
corr_100_99 = corr(xi(100, :)', xi(50, :)');

fprintf('Корреляция между строками 10 и 9: %f\n', corr_10_9);
fprintf('Корреляция между строками 50 и 49: %f\n', corr_50_49);
fprintf('Корреляция между строками 100 и 99: %f\n', corr_100_99);
