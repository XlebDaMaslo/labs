%% 3. Установить значения входных параметров lambda и mu
lambda = 2;  % Интенсивность входного потока
mu = 3;      % Интенсивность обслуживания

% Проверка на положительность значений
if lambda <= 0 || mu <= 0
    error('Интенсивность потока (λ) и интенсивность обслуживания (μ) должны быть положительными.');
end

% Параметры Вейбулловского распределения
k_weibull = 1.5;
theta_weibull = 1 / mu;

% Проверка на условие устойчивости системы
if lambda >= mu
    error('Система нестационарна: λ должно быть меньше μ.');
end

N = 1000000; % Количество заявок
t = linspace(0, 100, N);

%% 4. Передать в программу входные параметры, сформированные в лабораторной работе №5
% M/M/1 (экспоненциальные распределения для поступления и обслуживания)
tau_mm1 = exprnd(1/lambda, 1, N); % время между поступлениями
nu_mm1 = exprnd(1/mu, 1, N);      % время обслуживания

% M/G/1 (экспоненциальные поступления, Вейбулловское обслуживание)
tau_mg1 = exprnd(1/lambda, 1, N);
nu_mg1 = wblrnd(theta_weibull, k_weibull, 1, N);

% G/M/1 (Вейбулловские поступления, экспоненциальное обслуживание)
tau_gm1 = wblrnd(1/lambda, k_weibull, 1, N);
nu_gm1 = exprnd(1/mu, 1, N);

% G/G/1 (Вейбулловские поступления и Вейбулловское обслуживание)
tau_gg1 = wblrnd(1/lambda, k_weibull, 1, N);
nu_gg1 = wblrnd(theta_weibull, k_weibull, 1, N);

%% 5. Построить зависимости для каждого типа СМО на отдельных графиках
figure;

yl = N / 5; % Ожидаемое максимальное количество заявок

% M/M/1
subplot(2,2,1);
plot(t, cumsum(tau_mm1) - cumsum(nu_mm1));
title('M/M/1');
xlabel('Время');
ylabel('Число заявок');
ylim([0 yl]);

% M/G/1
subplot(2,2,2);
plot(t, cumsum(tau_mg1) - cumsum(nu_mg1));
title('M/G/1');
xlabel('Время');
ylabel('Число заявок');
ylim([0 yl]);

% G/M/1
subplot(2,2,3);
plot(t, cumsum(tau_gm1) - cumsum(nu_gm1));
title('G/M/1');
xlabel('Время');
ylabel('Число заявок');
ylim([0 yl]);

% G/G/1
subplot(2,2,4);
plot(t, cumsum(tau_gg1) - cumsum(nu_gg1));
title('G/G/1');
xlabel('Время');
ylabel('Число заявок');
ylim([0 yl]);

%% 6. Рассчитать статистические характеристики для каждого типа СМО
% Для всех систем M/M/1, M/G/1, G/M/1, G/G/1 вычисляем статистику

% Коэффициент загрузки (ρ) для всех систем
rho = lambda / mu;

% M/M/1 (анализируем через аналитические формулы)
L_mm1 = rho / (1 - rho);  % Среднее число заявок в системе
W_q_mm1 = rho / (mu * (1 - rho)); % Среднее время в очереди
W_s_mm1 = 1 / (mu * (1 - rho)); % Среднее время пребывания в системе

fprintf('M/M/1:\n');
fprintf('  Коэффициент загрузки: %.4f\n', rho);
fprintf('  Среднее число заявок в системе: %.4f\n', L_mm1);
fprintf('  Среднее время в очереди: %.4f\n', W_q_mm1);
fprintf('  Среднее время пребывания в системе: %.4f\n\n', W_s_mm1);

% M/G/1
L_mg1 = mean(cumsum(tau_mg1) - cumsum(nu_mg1)); % Среднее число заявок
W_q_mg1 = L_mg1 / lambda;  % Среднее время в очереди
fprintf('M/G/1:\n');
fprintf('  Коэффициент загрузки: %.4f\n', rho);
fprintf('  Среднее число заявок в системе: %.4f\n', L_mg1);
fprintf('  Среднее время в очереди: %.4f\n\n', W_q_mg1);

% G/M/1
L_gm1 = mean(cumsum(tau_gm1) - cumsum(nu_gm1)); % Среднее число заявок
W_q_gm1 = L_gm1 / lambda;  % Среднее время в очереди
fprintf('G/M/1:\n');
fprintf('  Коэффициент загрузки: %.4f\n', rho);
fprintf('  Среднее число заявок в системе: %.4f\n', L_gm1);
fprintf('  Среднее время в очереди: %.4f\n\n', W_q_gm1);

% G/G/1
L_gg1 = mean(cumsum(tau_gg1) - cumsum(nu_gg1)); % Среднее число заявок
W_q_gg1 = L_gg1 / lambda;  % Среднее время в очереди
fprintf('G/G/1:\n');
fprintf('  Коэффициент загрузки: %.4f\n', rho);
fprintf('  Среднее число заявок в системе: %.4f\n', L_gg1);
fprintf('  Среднее время в очереди: %.4f\n\n', W_q_gg1);

